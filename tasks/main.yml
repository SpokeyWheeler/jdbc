---
# tasks file for informix-jdbc

- name: check if this version is already installed
  stat:
    path: "{{ jdbc_install_path }}/.install_complete"
  register: st
  ignore_errors: true

- name: set already installed flag if necessary
  set_fact:
    jdbc_version_previously_installed: true
  when: st.stat.exists is defined and st.stat.exists

- name: check if force install flag is set
  set_fact:
    jdbc_version_previously_installed: false
  when: force_jdbc_install == true

- name: bail out if this version was previously installed and force install is not set
  fail:
    msg: "Aborting as JDBC version {{ jdbc_version }} was previously installed. Set force_jdbc_install to true in vars to force install"
  when: jdbc_version_previously_installed

- name: set the install media file name if HCL
  set_fact:
    jdbc_install_media_name: "hcl.jdbc.{{ jdbc_version }}.ALL.tar.gz"
  when: vendor == "hcl"

- name: set selinux permissive
  selinux:
    policy: targeted
    state: permissive

- name: create informix group
  group:
    name: informix
    state: present
    system: false

- name: create informix user
  user:
    home: /opt/informix
    group: informix
    name: informix
    shell: /bin/bash
    state: present
    system: false

- name: create target install directory
  file:
    group: informix
    mode: 0775
    owner: informix
    path: "{{ jdbc_install_path }}"
    state: directory

- name: create temp install directory
  file:
    group: informix
    mode: 0775
    owner: informix
    path: "{{ jdbc_tmp_path }}"
    state: directory

- name: upload / download and extract JDBC installer
  unarchive:
    dest: "{{ jdbc_tmp_path }}"
    src: "{{ source_location_of_jdbc_media }}/{{ jdbc_install_media_name }}"

- name: run installer
  become: true
  command: java -jar setup.jar -i silent -DLICENSE=accepted -DUSER_INSTALL_DIR="{{ jdbc_install_path }}"
  args:
    chdir: "{{ jdbc_tmp_path }}"

- name: validate install
  stat:
    path: "{{ jdbc_install_path }}/lib/ifxjdbc.jar"
  register: val
  ignore_errors: true

- name: abort install failed
  fail:
    msg: "Install failed - ifxjdbc.jar does not exist or is zero bytes"
  when: val.stat.exists != true or val.stat.size == 0

- name: clean up
  file:
    group: informix
    mode: 0775
    owner: informix
    path: "{{ jdbc_tmp_path }}"
    state: absent

- name: mark installation as complete
  file:
    group: informix
    mode: 0400
    owner: informix
    path: "{{ jdbc_install_path }}/.install_complete"
    state: touch
